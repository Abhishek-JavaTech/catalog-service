name: Build and Test

# Trigger the workflow on push or pull request events
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
env:
    registry: https://ghcr.io/
    username: rangari.javatech@gmail.com
    password: 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
    repository: abhishek-javatech/catalog-service

# Define the workflow's jobs
jobs:
  build-and-test:
    # The environment where the job will run
    runs-on: ubuntu-latest

    # Define the steps in the job
    steps:
      # Step 1: Check out the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Use Eclipse Temurin distribution of the JDK
          java-version: '17'      # Specify the Java version (adjust as needed)

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build and run tests
      - name: Build with Maven and run tests
        run: |
            mvn clean install

      # Step 5: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: rangari.javatech@gmail.com
          password: ${{ secrets.GITHUB_TOKEN }} # GitHub token (automatically provided)

      # Step 6: Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/${{ env.repository }}/catalog-service:latest .

      # Step 7: Push the Docker image to GitHub Container Registry
      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ env.repository }}/catalog-service:latest            
