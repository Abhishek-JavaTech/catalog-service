name: Build and Test

# Trigger the workflow on push or pull request events
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
env:
    registry: https://ghcr.io/
    username: rangari.javatech@gmail.com
    password: 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
    repository: catalog-service

# Define the workflow's jobs
jobs:
  build-and-test:
    # The environment where the job will run
    runs-on: ubuntu-latest

    # Define the steps in the job
    steps:
      # Step 1: Check out the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Use Eclipse Temurin distribution of the JDK
          java-version: '17'      # Specify the Java version (adjust as needed)

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build and run tests
      - name: Build with Maven and run tests
        run: |
            mvn clean install

      # Step 5: login to ghcr using docker
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
            registry: ${{env.registry}}
            username: ${{env.username}}
            password: ${{env.password}} 
      
      # Step 6: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ${{env.registry}}/${{ env.username }}/${{ env.repository }}:latest .

      # Step 7: Push Docker Image to GitHub Container Registry
      - name: Push Docker Image
        run: |
          docker push ${{env.registry}}/${{ env.username }}/${{ env.repository }}:latest
            
